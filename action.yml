name: 'Massa DeWeb Deployer'
description: 'Deploy your websites Massa DeWeb'
inputs:
  config_file:
    description: 'Deweb cli config file. default is deweb_cli_config.json'
    required: false
    default: deweb_cli_config.json
  source_folder:
    description: 'Path to website files directory. default is dist'
    required: false
    default: dist
  rpc_url:
    description: 'Massa Json RPC URL'
    required: false

outputs:
  deployed-website:
    description: "Deployed or updated address"
    value: ${{ steps.deploy-step.outputs.deployed-website }}

branding:
  icon: 'at-sign'
  color: 'green'

runs:
  using: "composite"
  steps:
    - name: Check Runner OS
      if: ${{ runner.os != 'Linux'}}
      shell: bash
      run: |
        echo "::error title=â›” error hint:: This action only supports Linux OS. Please use a Linux runner."
        exit 1
  
    - name: Install npm (if missing)
      shell: bash
      run: |
        if ! command -v npm &> /dev/null; then
          echo "npm not found. Downloading..."
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
          \. "$HOME/.nvm/nvm.sh"
        fi
        npm -v  # Confirm installation

    - name: Install CLI
      run: npm install -g @massalabs/deweb-cli@0.4.1-dev.20250414144108
      shell: bash

    - name: Execute deployment
      id: deploy-step
      run: |
        NODE_URL=""
        if [[ -n "$RPC_URL" ]]; then
          NODE_URL="--node_url $RPC_URL"
        fi
        npx @massalabs/deweb-cli -a upload -c $CONFIG_FILE -y ${NODE_URL} $SOURCE_FOLDER | tee deployment_output.log
        DEPLOYED_ADDRESS=$(grep 'Website deployed at' deployment_output.log | awk '{print $NF}')
        echo "deployed-website=$(echo $DEPLOYED_ADDRESS)" >> $GITHUB_OUTPUT
      shell: bash
      env:
        SECRET_KEY: ${{ env.MASSA_DEWEB_SECRET_KEY }}
        RPC_URL: ${{ inputs.rpc_url }}
        CONFIG_FILE: ${{ inputs.config_file }}
        SOURCE_FOLDER: ${{ inputs.source_folder }}
